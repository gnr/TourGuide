apply plugin: 'com.android.application'
repositories {
    mavenCentral()
    maven(){
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven { url 'https://maven.google.com' }
}

buildscript {
    repositories {
        maven { url 'https://maven.google.com' }
    }
}

Properties getGradleProperties(){
    def gradlePropsFile = file('../gradle.properties')
    def Properties gradleProps = new Properties()
    if (gradlePropsFile.canRead()) {
        gradleProps.load(new FileInputStream(gradlePropsFile))
        println gradleProps['VERSION_CODE']
        println gradleProps['VERSION_NAME']
    }
    else {
        throw new GradleException("Could not read gradle.properties!")
    }
    gradleProps;
}

android {
    compileSdk 34

    def gradleProps = getGradleProperties()
    defaultConfig {
        applicationId "tourguide.tourguide"
        minSdkVersion 16
        targetSdkVersion 34
        versionCode gradleProps['VERSION_CODE'].toInteger()
        versionName gradleProps['VERSION_NAME']
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    /* For navigation view (drawer) */
    compile project(':tourguide')
//    compile ('com.github.worker8:tourguide:1.0.16-SNAPSHOT@aar'){
//        transitive=true
//    }

    // Set this dependency to build and run Espresso tests
}

task print_git_tag_command << {
    def gradleProps = getGradleProperties()
    println "git tag -a v" + gradleProps['VERSION_NAME'] + " -m \"VERSION_CODE=" + gradleProps['VERSION_CODE'] + ", VERSION_NAME=" + gradleProps['VERSION_NAME'] + "\""
    println "git push --tags"
}
